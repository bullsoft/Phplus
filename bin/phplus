#!/usr/bin/env php
<?php
date_default_timezone_set('Asia/Shanghai');
ini_set("memory_limit", "4G");
use Phalcon\Support\Helper\Str\Camelize as CamelizeText;
use Phalcon\Support\Version;
use Bullsoft\Phplus\Bootstrap;

$where = dirname(__DIR__);

$folderName = basename($where);
if($folderName == 'vendor') {
    $vendorDir = $where;
    $moduleDir = $vendorDir . "/bullsoft/Phplus/devtool";
} elseif($folderName == 'Phplus') {
    $vendorDir = dirname($where, 2);
    $moduleDir = $where . "/devtool";
}
require_once("{$vendorDir}/autoload.php");

$app = (new Bootstrap($moduleDir))->app();
$version = (new Version())->getPart(
    Version::VERSION_MAJOR
);
$app->di()->setShared('cli', function(){
    return new League\CLImate\CLImate();
});

$phpOS = strtolower(PHP_OS);

if(substr($phpOS, 0, 3) == "win") {
    $this->cli->backgroundRed("对不起，Phalcon+命令行工具暂不支持Windows操作系统，请谅解！");
    exit(123);
}

$arguments = array();
foreach($argv as $k => $arg) {
    if($k == 1) {
        if(strpos($arg, ":") == false) {
            $arguments['task'] = $arg;
        } else {
            [$task, $action] = explode(":", $arg);
            $arguments['task'] = $task;
            $arguments['action'] = (new CamelizeText())($action, "-");
        }
    } elseif($k == 2) {
        if(!isset($arguments['action'])) {
            $arguments['action'] = (new CamelizeText())($arg, "-");
        } else {
            $arguments['params'][] = $arg;    
        }
    } elseif($k >= 3) {
        $arguments['params'][] = $arg;
    }
}

$app->handle($arguments);
